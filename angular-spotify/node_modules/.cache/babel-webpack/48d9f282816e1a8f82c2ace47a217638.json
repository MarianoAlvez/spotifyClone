{"ast":null,"code":"import _asyncToGenerator from \"C:/cursos/Angular/proyectos/spotifyClone/angular-spotify/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@modules/tracks/services/track.service\";\nimport * as i2 from \"../../../../shared/components/section-generic/section-generic.component\";\nexport class TracksPageComponent {\n  constructor(trackService) {\n    this.trackService = trackService;\n    this.tracksTrending = [];\n    this.tracksRandom = [];\n    this.listObservers$ = [];\n  }\n\n  ngOnInit() {\n    this.loadDataAll(); //TODO ðŸ“ŒðŸ“Œ\n\n    this.loadDataRandom(); //TODO ðŸ“ŒðŸ“Œ\n  }\n\n  loadDataAll() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.tracksTrending = yield _this.trackService.getAllTracks$().toPromise();\n    })();\n  }\n\n  loadDataRandom() {\n    this.trackService.getAllRandom$().subscribe(response => {\n      this.tracksRandom = response;\n    });\n  }\n\n  ngOnDestroy() {}\n\n}\n\nTracksPageComponent.Éµfac = function TracksPageComponent_Factory(t) {\n  return new (t || TracksPageComponent)(i0.ÉµÉµdirectiveInject(i1.TrackService));\n};\n\nTracksPageComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n  type: TracksPageComponent,\n  selectors: [[\"app-tracks-page\"]],\n  decls: 3,\n  vars: 6,\n  consts: [[1, \"tracks-page\"], [3, \"dataTracks\", \"mode\", \"title\"]],\n  template: function TracksPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ÉµÉµelementStart(0, \"div\", 0);\n      i0.ÉµÉµelement(1, \"app-section-generic\", 1);\n      i0.ÉµÉµelement(2, \"app-section-generic\", 1);\n      i0.ÉµÉµelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ÉµÉµadvance(1);\n      i0.ÉµÉµproperty(\"dataTracks\", ctx.tracksTrending)(\"mode\", \"small\")(\"title\", \"\\u00A1La mejor m\\u00FAsica del mundo!\");\n      i0.ÉµÉµadvance(1);\n      i0.ÉµÉµproperty(\"dataTracks\", ctx.tracksRandom)(\"mode\", \"big\")(\"title\", \"Lo mejor de Electronica\");\n    }\n  },\n  directives: [i2.SectionGenericComponent],\n  styles: [\".tracks-page[_ngcontent-%COMP%] {\\r\\n    padding: 1rem;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYWNrcy1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0FBQ2pCIiwiZmlsZSI6InRyYWNrcy1wYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudHJhY2tzLXBhZ2Uge1xyXG4gICAgcGFkZGluZzogMXJlbTtcclxufSJdfQ== */\"]\n});","map":{"version":3,"sources":["C:\\cursos\\Angular\\proyectos\\spotifyClone\\angular-spotify\\src\\app\\modules\\tracks\\pages\\tracks-page\\tracks-page.component.ts","C:\\cursos\\Angular\\proyectos\\spotifyClone\\angular-spotify\\src\\app\\modules\\tracks\\pages\\tracks-page\\tracks-page.component.html"],"names":[],"mappings":";;;;AAUA,OAAM,MAAO,mBAAP,CAA0B;AAM9B,EAAA,WAAA,CAAoB,YAApB,EAA8C;AAA1B,SAAA,YAAA,GAAA,YAAA;AAJpB,SAAA,cAAA,GAAoC,EAApC;AACA,SAAA,YAAA,GAAkC,EAAlC;AACA,SAAA,cAAA,GAAsC,EAAtC;AAEmD;;AAEnD,EAAA,QAAQ,GAAA;AACN,SAAK,WAAL,GADM,CACa;;AACnB,SAAK,cAAL,GAFM,CAEgB;AACvB;;AAEK,EAAA,WAAW,GAAA;AAAA;;AAAA;AACf,MAAA,KAAI,CAAC,cAAL,SAA4B,KAAI,CAAC,YAAL,CAAkB,aAAlB,GAAkC,SAAlC,EAA5B;AADe;AAGhB;;AAED,EAAA,cAAc,GAAA;AACZ,SAAK,YAAL,CAAkB,aAAlB,GACG,SADH,CACc,QAAD,IAA2B;AACpC,WAAK,YAAL,GAAoB,QAApB;AACD,KAHH;AAID;;AAED,EAAA,WAAW,GAAA,CAEV;;AA3B6B;;;mBAAnB,mB,EAAmB,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,YAAA,C;AAAA,C;;;QAAnB,mB;AAAmB,EAAA,SAAA,EAAA,CAAA,CAAA,iBAAA,CAAA,C;AAAA,EAAA,KAAA,EAAA,C;AAAA,EAAA,IAAA,EAAA,C;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,aAAA,CAAA,EAAA,CAAA,CAAA,EAAA,YAAA,EAAA,MAAA,EAAA,OAAA,CAAA,C;AAAA,EAAA,QAAA,EAAA,SAAA,4BAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;ACVhC,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AAEI,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,qBAAA,EAAA,CAAA;AAGA,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,qBAAA,EAAA,CAAA;AAEJ,MAAA,EAAA,CAAA,YAAA;;;;AALyB,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,YAAA,EAAA,GAAA,CAAA,cAAA,EAA6B,MAA7B,EAA6B,OAA7B,EAA6B,OAA7B,EAA6B,uCAA7B;AAGA,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,YAAA,EAAA,GAAA,CAAA,YAAA,EAA2B,MAA3B,EAA2B,KAA3B,EAA2B,OAA3B,EAA2B,yBAA3B","sourcesContent":["import { TrackService } from '@modules/tracks/services/track.service';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { TrackModel } from '@core/models/tracks.model';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-tracks-page',\r\n  templateUrl: './tracks-page.component.html',\r\n  styleUrls: ['./tracks-page.component.css']\r\n})\r\nexport class TracksPageComponent implements OnInit, OnDestroy {\r\n\r\n  tracksTrending: Array<TrackModel> = []\r\n  tracksRandom: Array<TrackModel> = []\r\n  listObservers$: Array<Subscription> = []\r\n\r\n  constructor(private trackService: TrackService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadDataAll() //TODO ðŸ“ŒðŸ“Œ\r\n    this.loadDataRandom() //TODO ðŸ“ŒðŸ“Œ\r\n  }\r\n\r\n  async loadDataAll(): Promise<any> {\r\n    this.tracksTrending = await this.trackService.getAllTracks$().toPromise()\r\n\r\n  }\r\n\r\n  loadDataRandom(): void {\r\n    this.trackService.getAllRandom$()\r\n      .subscribe((response: TrackModel[]) => {\r\n        this.tracksRandom = response\r\n      })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"tracks-page\">\r\n    <!--section top (small)-->\r\n    <app-section-generic [dataTracks]=\"tracksTrending\" [mode]=\"'small'\" [title]=\"'Â¡La mejor mÃºsica del mundo!'\">\r\n    </app-section-generic>\r\n    <!--section medium (big)-->\r\n    <app-section-generic [dataTracks]=\"tracksRandom\" [mode]=\"'big'\" [title]=\"'Lo mejor de Electronica'\">\r\n    </app-section-generic>\r\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}